{"ast":null,"code":"import _classCallCheck from \"/Users/davishochstatter/Final-Project/Moodi/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davishochstatter/Final-Project/Moodi/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davishochstatter/Final-Project/Moodi/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davishochstatter/Final-Project/Moodi/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davishochstatter/Final-Project/Moodi/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davishochstatter/Final-Project/Moodi/client/src/App.js\";\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { IntlProvider } from 'react-intl';\nimport AppLocale from './lang';\nimport ColorSwitcher from './components/common/ColorSwitcher';\nimport NotificationContainer from './components/common/react-notifications/NotificationContainer';\nimport { isMultiColorActive } from './constants/defaultValues';\nimport { getDirection } from './helpers/Utils';\nimport Post from './components/cards/Post';\nvar ViewMain = React.lazy(function () {\n  return import(\n  /* webpackChunkName: \"views\" */\n  './views');\n});\nvar ViewApp = React.lazy(function () {\n  return import(\n  /* webpackChunkName: \"views-app\" */\n  './views/app');\n});\nvar ViewError = React.lazy(function () {\n  return import(\n  /* webpackChunkName: \"views-error\" */\n  './views/error');\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    var direction = getDirection();\n\n    if (direction.isRtl) {\n      document.body.classList.add('rtl');\n      document.body.classList.remove('ltr');\n    } else {\n      document.body.classList.add('ltr');\n      document.body.classList.remove('rtl');\n    }\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var locale = this.props.locale;\n      var currentAppLocale = AppLocale[locale];\n      return React.createElement(\"div\", {\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(IntlProvider, {\n        locale: currentAppLocale.locale,\n        messages: currentAppLocale.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(NotificationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), isMultiColorActive && React.createElement(ColorSwitcher, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Post, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Suspense, {\n        fallback: React.createElement(\"div\", {\n          className: \"loading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/app\",\n        render: function render(props) {\n          return React.createElement(ViewApp, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/error\",\n        exact: true,\n        render: function render(props) {\n          return React.createElement(ViewError, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: function render(props) {\n          return React.createElement(ViewMain, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  var locale = settings.locale;\n  return {\n    locale: locale\n  };\n};\n\nvar mapActionsToProps = {};\nexport default connect(mapStateToProps, mapActionsToProps)(App);","map":{"version":3,"sources":["/Users/davishochstatter/Final-Project/Moodi/client/src/App.js"],"names":["React","Component","Suspense","connect","BrowserRouter","Router","Route","Switch","Redirect","IntlProvider","AppLocale","ColorSwitcher","NotificationContainer","isMultiColorActive","getDirection","Post","ViewMain","lazy","ViewApp","ViewError","App","props","direction","isRtl","document","body","classList","add","remove","locale","currentAppLocale","messages","mapStateToProps","settings","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { IntlProvider } from 'react-intl';\r\nimport AppLocale from './lang';\r\nimport ColorSwitcher from './components/common/ColorSwitcher';\r\nimport NotificationContainer from './components/common/react-notifications/NotificationContainer';\r\nimport { isMultiColorActive } from './constants/defaultValues';\r\nimport { getDirection } from './helpers/Utils';\r\nimport Post from './components/cards/Post';\r\n\r\nconst ViewMain = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views\" */ './views')\r\n);\r\nconst ViewApp = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ './views/app')\r\n);\r\nconst ViewError = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-error\" */ './views/error')\r\n);\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const direction = getDirection();\r\n    if (direction.isRtl) {\r\n      document.body.classList.add('rtl');\r\n      document.body.classList.remove('ltr');\r\n    } else {\r\n      document.body.classList.add('ltr');\r\n      document.body.classList.remove('rtl');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { locale } = this.props;\r\n    const currentAppLocale = AppLocale[locale];\r\n\r\n    return (\r\n      <div className=\"h-100\">\r\n        <IntlProvider\r\n          locale={currentAppLocale.locale}\r\n          messages={currentAppLocale.messages}\r\n        >\r\n          <React.Fragment>\r\n            <NotificationContainer />\r\n            {isMultiColorActive && <ColorSwitcher />}\r\n            <Post />\r\n            <Suspense fallback={<div className=\"loading\" />}>\r\n              <Router>\r\n                <Switch>\r\n                  <Route\r\n                    path=\"/app\"\r\n                    render={props => <ViewApp {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/error\"\r\n                    exact\r\n                    render={props => <ViewError {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    render={props => <ViewMain {...props} />}\r\n                  />\r\n                  <Redirect to=\"/error\" />\r\n                </Switch>\r\n              </Router>\r\n            </Suspense>\r\n          </React.Fragment>\r\n        </IntlProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ settings }) => {\r\n  const { locale } = settings;\r\n  return { locale };\r\n};\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(App);\r\n"]},"metadata":{},"sourceType":"module"}